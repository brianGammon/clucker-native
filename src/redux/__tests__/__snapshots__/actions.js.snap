// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Redux actions: CHILD_ADDED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "data": "a",
    "key": "1",
  },
  "type": "CHILD_ADDED",
}
`;

exports[`Redux actions: CHILD_CHANGED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "data": "a",
    "key": "1",
  },
  "type": "CHILD_CHANGED",
}
`;

exports[`Redux actions: CHILD_REMOVED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "key": "1",
  },
  "type": "CHILD_REMOVED",
}
`;

exports[`Redux actions: CREATE_FULFILLED 1`] = `
Object {
  "meta": Object {
    "type": "chickens",
  },
  "payload": Object {},
  "type": "CREATE_FULFILLED",
}
`;

exports[`Redux actions: CREATE_REJECTED 1`] = `
Object {
  "meta": Object {
    "type": "chickens",
  },
  "payload": Object {
    "error": [Error: Error!],
  },
  "type": "CREATE_REJECTED",
}
`;

exports[`Redux actions: CREATE_REQUESTED 1`] = `
Object {
  "meta": Object {
    "type": "chickens",
  },
  "payload": Object {
    "data": Object {
      "name": "Test Chicken",
    },
    "flockId": "flock1",
  },
  "type": "CREATE_REQUESTED",
}
`;

exports[`Redux actions: LISTEN_FULFILLED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "data": Object {
      "item1": 1,
      "item2": 2,
    },
    "key": "someKey",
  },
  "type": "LISTEN_FULFILLED",
}
`;

exports[`Redux actions: LISTEN_REJECTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "error": [Error: Error!],
  },
  "type": "LISTEN_REJECTED",
}
`;

exports[`Redux actions: LISTEN_REMOVED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "clearData": true,
  },
  "type": "LISTEN_REMOVED",
}
`;

exports[`Redux actions: LISTEN_REQUESTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "ref": Reference {
      "data": null,
      "off": [MockFunction],
      "on": [MockFunction],
      "once": [MockFunction],
      "path": "someRef",
      "push": [MockFunction],
      "remove": [MockFunction],
      "snap": Object {
        "val": [Function],
      },
      "update": [MockFunction],
      "val": [MockFunction],
    },
  },
  "type": "LISTEN_REQUESTED",
}
`;

exports[`Redux actions: REMOVE_ALL_LISTENERS_REQUESTED 1`] = `
Object {
  "payload": Object {
    "clearData": true,
  },
  "type": "REMOVE_ALL_LISTENERS_REQUESTED",
}
`;

exports[`Redux actions: REMOVE_FULFILLED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {},
  "type": "REMOVE_FULFILLED",
}
`;

exports[`Redux actions: REMOVE_LISTENER_REQUESTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "clearData": true,
  },
  "type": "REMOVE_LISTENER_REQUESTED",
}
`;

exports[`Redux actions: REMOVE_REJECTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "error": [Error: Error!],
  },
  "type": "REMOVE_REJECTED",
}
`;

exports[`Redux actions: REMOVE_REQUESTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": "1",
  "type": "REMOVE_REQUESTED",
}
`;

exports[`Redux actions: UPDATE_FULFILLED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {},
  "type": "UPDATE_FULFILLED",
}
`;

exports[`Redux actions: UPDATE_REJECTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": Object {
    "error": [Error: Error!],
  },
  "type": "UPDATE_REJECTED",
}
`;

exports[`Redux actions: UPDATE_REQUESTED 1`] = `
Object {
  "meta": Object {
    "type": "userContacts",
  },
  "payload": "1",
  "type": "UPDATE_REQUESTED",
}
`;

exports[`Redux actions: getFlock 1`] = `
Object {
  "meta": Object {
    "type": "flocks",
  },
  "payload": Object {
    "ref": Reference {
      "data": null,
      "off": [MockFunction],
      "on": [MockFunction],
      "once": [MockFunction],
      "path": "flocks/flockId1",
      "push": [MockFunction],
      "remove": [MockFunction],
      "snap": Object {
        "val": [Function],
      },
      "update": [MockFunction],
      "val": [MockFunction],
    },
  },
  "type": "GET_FLOCK_REQUESTED",
}
`;

exports[`Redux actions: getFlockFulfilled 1`] = `
Object {
  "meta": Object {
    "type": "flocks",
  },
  "payload": Object {
    "name": "Test Flock",
    "ownedBy": "user1",
  },
  "type": "GET_FLOCK_FULFILLED",
}
`;

exports[`Redux actions: getFlockRejected 1`] = `
Object {
  "meta": Object {
    "type": "flocks",
  },
  "payload": Object {
    "error": [Error: Error1],
  },
  "type": "GET_FLOCK_REJECTED",
}
`;

exports[`Redux actions: listenToChickens 1`] = `
Object {
  "meta": Object {
    "type": "chickens",
  },
  "payload": Object {
    "ref": Reference {
      "data": null,
      "off": [MockFunction],
      "on": [MockFunction],
      "once": [MockFunction],
      "path": "chickens/flockId1",
      "push": [MockFunction],
      "remove": [MockFunction],
      "snap": Object {
        "val": [Function],
      },
      "update": [MockFunction],
      "val": [MockFunction],
    },
  },
  "type": "LISTEN_REQUESTED",
}
`;

exports[`Redux actions: listenToEggs 1`] = `
Object {
  "meta": Object {
    "type": "eggs",
  },
  "payload": Object {
    "ref": Reference {
      "data": null,
      "off": [MockFunction],
      "on": [MockFunction],
      "once": [MockFunction],
      "path": "eggs/flockId1",
      "push": [MockFunction],
      "remove": [MockFunction],
      "snap": Object {
        "val": [Function],
      },
      "update": [MockFunction],
      "val": [MockFunction],
    },
  },
  "type": "LISTEN_REQUESTED",
}
`;

exports[`Redux actions: listenToUserSettings 1`] = `
Object {
  "meta": Object {
    "type": "userSettings",
  },
  "payload": Object {
    "ref": Reference {
      "data": null,
      "off": [MockFunction],
      "on": [MockFunction],
      "once": [MockFunction],
      "path": "userSettings/userId1",
      "push": [MockFunction],
      "remove": [MockFunction],
      "snap": Object {
        "val": [Function],
      },
      "update": [MockFunction],
      "val": [MockFunction],
    },
  },
  "type": "LISTEN_REQUESTED",
}
`;

exports[`Redux actions: removeInitialUrl 1`] = `
Object {
  "type": "REMOVE_INITIAL_URL",
}
`;

exports[`Redux actions: removeUserSettingsListenerRequested 1`] = `
Object {
  "meta": Object {
    "type": "userSettings",
  },
  "payload": Object {
    "clearData": false,
  },
  "type": "REMOVE_LISTENER_REQUESTED",
}
`;

exports[`Redux actions: removeUserSettingsRequested 1`] = `
Object {
  "meta": Object {
    "type": "userSettings",
  },
  "payload": Object {
    "uid": "userId1",
  },
  "type": "REMOVE_REQUESTED",
}
`;

exports[`Redux actions: setInitialUrl 1`] = `
Object {
  "payload": "test://test",
  "type": "SET_INITIAL_URL",
}
`;

exports[`Redux actions: updateUserSettingsRequested 1`] = `
Object {
  "meta": Object {
    "type": "userSettings",
  },
  "payload": Object {
    "currentFlockId": "flockId1",
    "displayName": "some name",
    "flocks": Object {
      "flockId1": true,
    },
    "uid": "userId1",
  },
  "type": "UPDATE_REQUESTED",
}
`;
