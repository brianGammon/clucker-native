// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ImageViewer renders properly showModal set to false 1`] = `
<Component
  animationType="fade"
  hardwareAccelerated={false}
  onOrientationChange={[Function]}
  onRequestClose={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  transparent={true}
  visible={false}
>
  <Styled(ViewNB)
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.75)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Styled(Button)
      large={true}
      light={true}
      onPress={[Function]}
      style={
        Object {
          "position": "absolute",
          "right": 10,
          "top": 10,
        }
      }
      transparent={true}
    >
      <Styled(Icon)
        name="close"
        style={
          Object {
            "fontSize": 60,
          }
        }
      />
    </Styled(Button)>
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "https://example.com/image.jpg",
        }
      }
      style={
        Object {
          "height": 750,
          "width": 750,
        }
      }
    />
  </Styled(ViewNB)>
</Component>
`;

exports[`ImageViewer renders properly with image URL 1`] = `
<Component
  animationType="fade"
  hardwareAccelerated={false}
  onOrientationChange={[Function]}
  onRequestClose={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  transparent={true}
  visible={true}
>
  <Styled(ViewNB)
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.75)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Styled(Button)
      large={true}
      light={true}
      onPress={[Function]}
      style={
        Object {
          "position": "absolute",
          "right": 10,
          "top": 10,
        }
      }
      transparent={true}
    >
      <Styled(Icon)
        name="close"
        style={
          Object {
            "fontSize": 60,
          }
        }
      />
    </Styled(Button)>
    <Image
      resizeMode="cover"
      source={
        Object {
          "uri": "https://example.com/image.jpg",
        }
      }
      style={
        Object {
          "height": 750,
          "width": 750,
        }
      }
    />
  </Styled(ViewNB)>
</Component>
`;

exports[`ImageViewer renders properly with no image URL provided 1`] = `
<Component
  animationType="fade"
  hardwareAccelerated={false}
  onOrientationChange={[Function]}
  onRequestClose={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  transparent={true}
  visible={true}
>
  <Styled(ViewNB)
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,0.75)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Styled(Button)
      large={true}
      light={true}
      onPress={[Function]}
      style={
        Object {
          "position": "absolute",
          "right": 10,
          "top": 10,
        }
      }
      transparent={true}
    >
      <Styled(Icon)
        name="close"
        style={
          Object {
            "fontSize": 60,
          }
        }
      />
    </Styled(Button)>
    <Image
      resizeMode="cover"
      source={
        Object {
          "testUri": "../../../src/assets/default-profile-photo.png",
        }
      }
      style={
        Object {
          "height": 750,
          "width": 750,
        }
      }
    />
  </Styled(ViewNB)>
</Component>
`;
