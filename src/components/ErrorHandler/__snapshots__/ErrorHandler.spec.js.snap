// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorHandler Connected component renders with error message 1`] = `
<ErrorHandler
  clearErrors={[Function]}
  error="Some error occurred"
  startListening={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
  uid="user1"
/>
`;

exports[`ErrorHandler Renderer component renders 1`] = `
<Component
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  transparent={true}
  visible={true}
>
  <Styled(ViewNB)
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Styled(ViewNB)
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "#d9534f",
          "borderRadius": 10,
          "padding": 15,
          "width": 300,
        }
      }
    >
      <Styled(H3)>
        Sorry, something went wrong
      </Styled(H3)>
      <Styled(ViewNB)
        style={
          Object {
            "marginVertical": 20,
          }
        }
      >
        <Styled(Text)
          style={
            Object {
              "marginBottom": 4,
            }
          }
        >
          Things you can try:
        </Styled(Text)>
        <Styled(Text)
          style={
            Object {
              "marginBottom": 4,
            }
          }
        >
          • Make sure you have an internet connection, then tap Reload.
        </Styled(Text)>
        <Styled(Text)
          style={
            Object {
              "marginBottom": 4,
            }
          }
        >
          • Sign out in Settings, then sign in again.
        </Styled(Text)>
        <Styled(ViewNB)
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-evenly",
              "marginTop": 10,
            }
          }
        >
          <Styled(Button)
            bordered={true}
            dark={true}
            onPress={[Function]}
            small={true}
          >
            <Styled(Icon)
              name="refresh"
            />
            <Styled(Text)
              style={
                Object {
                  "paddingLeft": 0,
                }
              }
            >
              Reload
            </Styled(Text)>
          </Styled(Button)>
          <Styled(Button)
            bordered={true}
            dark={true}
            onPress={[Function]}
            small={true}
          >
            <Styled(Icon)
              name="close"
            />
            <Styled(Text)
              style={
                Object {
                  "paddingLeft": 0,
                }
              }
            >
              Dismiss
            </Styled(Text)>
          </Styled(Button)>
        </Styled(ViewNB)>
      </Styled(ViewNB)>
      <Accordion
        contentStyle={
          Object {
            "backgroundColor": "#ea7f7c",
          }
        }
        dataArray={
          Array [
            Object {
              "content": "Test Error Message",
              "title": "Error Details",
            },
          ]
        }
        expanded={1}
        headerStyle={
          Object {
            "backgroundColor": "#d9534f",
          }
        }
      />
    </Styled(ViewNB)>
  </Styled(ViewNB)>
</Component>
`;
